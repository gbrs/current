#include <iostream>

using namespace std;

int main() {
    int a, b, c, d;
    float e;
    cin >> a >> b >> c >> d;
    cout << a << " " << b << endl;
    return 0;
}

-----------------------------------------

#include <bits/stdc++.h>  // загрузит все библиотеки в компиляторе g++?

-----------------------------------------

if (a > b) {
    ...
}
else {
        cout << "YES";
    }

if (year % 4 == 0 && year % 100 != 0 || mod400)  // можно and и or

b = (a > 0) ? 1 : -1;  // тернарный оператор если-то-иначе

a = b - частая ошибка трудноуловимая. True. Компилятор не считает ошибкой.

-----------------------------------------

while (i <= n) {
    ...
    i = i + 1;
}

Цикл с постусловием:
do
    <ваш код>
while (условие);
// единственная конструкция (среди ifов и циклов), которая заканчивается ;

-----------------------------------------

for (int i = 1; i <= 100; i++) {
    ...
}

Вечный цикл:
while (true)
for (;;)

-----------------------------------------

int a[n][m];
for (int i = 0; i < n; i++) { //перебор строк
    for (int j = 0; j < m; j++) { //перебор столбцов
        cin >> a[i][j];
    }
}

------------------------------------------

int func(int a, int b, int c, int d) {
    ...
}
...
// в main
func(a, b, c, d);

void F (int I, double D)  // функция F не возвращает никаких значений
int foo(void)  // функция не принимает никаких данных

ссылки?

-----------------------------------------

#include <vector>

int n;
cin >> n;
vector <int> a(n);
for (int i = 0; i < n; i++) {
    cin >> a[i];
}

for (auto now : a) {}  // перебор всех элементов now массива a

int a[5] = { 1, 2, 3, 4, 5 };
vector <int> a;  // создаст пустой вектор

a.push_back(temp);  // аналог append
a.insert(pos, value);
a.pop_back();  // pop
a.erase(p);  // remove
a.size();  // len()
a.empty();  // пуст ли
a.find();  // где находится первый такой

------------------------------------------

#include <string>

string s;
char c;  // похож на массив из получисел-полубукв: ASCI-номера
cin >> s;
c = s[0];
cout << c << s.substr(4, 3);  // с какого и сколько штук

getline(cin, s);  // ввод всей строки в несколько слов с пробелами

for (auto c : s) {}  // перебор всех элементов c строки s

s.rfind();
s.replace( );

------------------------------------------

#include <set>

set <int> s;
s.insert(5);
cout << (s.find(5) != s.end());  // если элемента нет, то find возвращает s.end()
s.erase(5);

for (auto now : s) {}  // перебор всех элементов now множества s

------------------------------------------

#include <map>

map <int, string> s;
  s[112] = "sos";
  if (s.find(112) != s.end()) {
        cout << "YES\n";
  }

for (auto now : s) {  // перебор всех элементов словаря
    cout << now.first << " " << now.second << "\n";
    // выведет ключ и значение
}

------------------------------------------

Приведение типов
2 / 4 * 3.14 даст 0.0
n / (float) m;  //делаем явное преобразование типов или float(m)

------------------------------------------

Типы данных:
int, long - 4 битное целое: от -2 147 483 648 до 2 147 483 647.
long long - 8 битное целое: от -9 223 372 036 854 775 808
до 9 223 372 036 854 775 807 ±(~9 * 10^18)
4 битный float: ±(3,4⋅10^−38…3,4⋅10^38)
8 битный double: ±(1,7⋅10^−308…1,7⋅10^308)
bool
char

------------------------------------------

#include <cmath> ...
pow(a,b) степень,
abs(a)/fabs(a),
sqrt(a) корень,
fmod(a, b) остаток от деления вещественных чисел,
exp(a), sin(a), asin(a),
log10(a), log(a) натуральный логарифм
округления:
trunc(x);  отбрасывание
floor(x); ceil(x); вниз и вверх
round(x); математическое. Отрицательные числа округляются вверх!

------------------------------------------

#include <algorithm> ...
min()  // только попарно числа сравнивает
max()
sort(a.begin(), a.end());  // сортировка вектора, присваивать ничему не надо

------------------------------------------

#include <climits> ...
INT_MAX  // самое большое целое
INT_MIN
LLONG_MAX
LLONG_MIN

------------------------------------------

русский язык:
#include <locale> ...
setlocale(LC_ALL, "RUSSIAN");

------------------------------------------




